[core]
  editor = vim
  pager = diff-so-fancy | less --tabs=4 -RFX
  autocrlf = input
[alias]
  aliases  = !bash -c 'git config -l | grep alias | sed 's/^alias\\.//g''
  h = aliases

  # add paragraph
  ap = add -p

  # delete branch
  bD = "!git branch -a --color=always -v | fzf --ansi --preview 'git log --color=always -p -n 10 {1}' --bind 'enter:become(git branch -D {1})' --height 40% --layout=reverse"

  # create and checkout
  cb = checkout -b
  # better checkout
  co = "!git branch --sort=-committerdate | fzf --preview 'git show --color=always {-1}' --bind 'enter:become(git checkout {-1})' --height 40% --layout reverse"

  cm = commit -m
  ca = commit -am
  cp = "!branch=$(git for-each-ref --sort=-committerdate --format='%(refname:short)' refs/heads/ | fzf --ansi --height 40% --layout=reverse --preview 'git log --color=always -n 5 {}'); [ -z \"$branch\" ] && exit 1; commit=$(git log --oneline --color=always \"$branch\" | fzf --ansi --height 40% --layout=reverse --preview 'git show --color=always {1}'); [ -z \"$commit\" ] && exit 1; git cherry-pick \"${commit%% *}\""

  cl = clean -ffxd

  df = diff
  dt = difftool
  dfs = diff --staged
  dfd = diff origin/develop

  # show commits
  l = "!git log --color=always --pretty=format:'%C(auto)%h %C(green)%ad %C(blue)%an %C(yellow)%d %C(reset)%s' --date=short | fzf --ansi --preview 'git show --color=always {1}' --bind 'enter:become(git show {1})' --height 75% --layout=reverse"

  mm = merge --no-ff
  mt = mergetool --tool=bc3
  md = merge origin/develop

  st = status --short --branch

  ps = push
  pl = pull --no-rebase

  rh = reset --hard
  undo = reset --hard HEAD^
  uncommit = reset --soft HEAD~1
  unstage = reset --
  delete-unstaged = restore .
[color]
  diff = auto
  status = auto
  branch = auto
[user]
	name = avi naftalis
	email = avin@hailo.ai
[help]
	autocorrect = 1
[pull]
	rebase = false
[fetch]
	prune = true
[interactive]
	diffFilter = diff-so-fancy --patch
[submodule]
	recurse = true
